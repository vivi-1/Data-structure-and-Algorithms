Chapter 3
Q1: function​ isLeapYear(year) {
​ 	  ​return​ (year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0);
    }

O(1)

Q2: ​function​ arraySum(array) {
​ 	  ​let​ sum = 0;
​
​ 	  ​for​(​let​ i = 0; i < array.length; i++) {
​ 	    sum += array[i];
​ 	  }
​
​ 	  ​return​ sum;
​ 	}
O(N)

Q3: O(logN)
Q4: O(N)
Q5: O(1)




Chapter 4

Q1: 100 100 7 10000
    2000 2000 11 4000000

Q2: 16

Q3: O(N^2)

Q4:
 def​ ​greatestNumber​(array):
    gv=array[0]
​ 	 for i in array:
        gv < i:
        gv = i
​ 	 return​ gv;



Chapter 5
Q1: O(N)
Q2: O(N^2)
Q3: O(N)
Q4: O(N)
Q5: O(N^2)


Chapter 6
Q1: O(N2)
Q2: O(N)
Q3:
  best: O(1)
  average: O(N^2)
  worst: O(N^2)
  Expression: No two elements can be added to 10. So we need to go through all
  the elements in the two arrays:  N * N = N^2 (N as the amount of elements)
Q4: O(N)
modification:
function​ containsX(string) {
​ 	  ​for​(​let​ i = 0; i < string.length; i++) {
​ 	    ​if​ (string[i] === ​"X"​) {
​ 	      return ​true​;
          break;
​ 	    }
​ 	  }
​ 	  ​return​ false;
​ 	}


Chapter 7
Q1: O(N)
Q2: O(N)
Q3: O(N^2)
Q4: O(N^3)
Q5: O(logN)


Chapter8 (python)
#Q1:
def intersection(arr1, arr2):
    arrlib = {}
    result = []
    for x in arr1:
        arrlib[x] = True
    for y in arr2:
        if y in arrlib.keys():
            result.append(y)
    print (result)
arr1 = {0, 2, 4, 6, 8}
arr2 = {1, 2, 3, 4, 5}
intersection(arr1, arr2)

#Q2:
def fdup(arr):
    arrlib = {}
    for x in arr:
        if x in arrlib.keys():
            print(x)
            break
        else:
            arrlib[x] = True

arr3 = ['a', 'b', 'c', 'd', 'c', 'e', 'f']
fdup(arr3)



#Q3:
arrlib3 = {'a':True, 'b':True, 'c':True, 'd':True, 'e':True, 'f':True, 'h':True, 'i':True, 'j':True, 'k':True, 'l':True, 'm':True, 'n':True, 'o':True, 'p':True, 'q':True, 'r':True, 's':True, 't':True, 'u':True, 'v':True, 'w':True, 'x':True, 'y':True, 'z':True}
def fmiss(str):
    result = []
    arrlib= {}
    str1 = "abcdefghijklmnopqrstuvwxyz"
    for x in str:
        arrlib[x] = True
    for y in str1:
        if arrlib.get(y) is None:
            result.append(y)
    print (result)
str1 = "the quick brown box jumps over a lazy dog"
fmiss(str1)

#Q4:
def fndup(str):
    arrlib = {}
    for x in str:
        arrlib[x] = 0
        arrlib[x] += 1
    for x in str:
        if arrlib[x] == 1:
            print (x)
            break
str2 = "minimum"
fndup(str2)


Chapter 9
Q1: I will do FIFO which is a queue
Q2: 6 and 5
Q3: 3
Q4:
def rev(str):
    temp1 = []
    temp2 = ""
    for x in str:
        temp1.append(x)
    for i in range(0, len(str)):
        temp2 += temp1.pop()
    print(temp2)

word = "abcde"
rev(word)


Chapter 10
Q1: Base case is when low = high +2 (eg.if high = 10, then base case is when low=12)
Q2: if n is an even number, it will be indefinite because it will miss the base case since n===1 will not happen
Q3:
​def​ ​sum​(low, high)
​ 	  ​return​ high + sum(low, high - 1)
     return low if high == low
​ 	​end​
Q4:
def print_mix(arr):
    for i in arr:
        if isinstance(i, int) == True:
            print (i)
        else:
            print_mix(i)
array = [1,2,3,[4, 5, 6], 7,[8,[9, 10, 11,[12, 13, 14]]],[15, 16, 17, 18, 19,[20, 21, 22,[23, 24, 25,[26, 27, 29]], 30, 31], 32], 33]
print_mix(array)
